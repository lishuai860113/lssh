#!/bin/bash
#write by shuaili

while getopts ":p:f:x:d:r:n:mhv" optname
do
    case "$optname" in
      "p")
        cgroup_arg=$OPTARG
        ;;
      "f")
        filename=$OPTARG
        ;;
      "m")
        rmpid=true
        ;;
      "x")
        exec_str=$OPTARG
        ;;
      "d")
        attach_pid=$OPTARG
        ;;
      "r")
        rm_null=true
        ;;
      "n")
        groupname=$OPTARG
        ;;
      "h")
        echo "help:$0 -p \"arg1=v1 arg2=v2 ..\" -f argfilename -x execstr -d pids"
        ;;
      "v")
        debuglabel=true
        ;;
      "?")
        echo "Unknown option $OPTARG"
        ;;
      ":")
        echo "No argument value for option $OPTARG"
        ;;
      *)
        echo "Unknown error while processing options"
        ;;
    esac
done

error_message()
{
  echo $1
  exit $2
}

tmpfile=$(mktemp)

if [[ $cgroup_arg && $filename ]]
then
  error_message "-p and -f is error" 23
fi

if [[ $exec_str && $attach_pid ]]
then
  error_message "-x and -d is error" 24
fi

if [[ $cgroup_arg ]]
then
  echo $cgroup_arg | tr " " "\n" | sort >$tmpfile
fi

if [[ $filename ]]
then
  cat $filename | tr " " "\n" | sort >$tmpfile
fi

if [[ $exec_str || $attach_pid ]]
then
  if [[ $groupname ]]
  then
    gro=$groupname
  else
    uuid >/dev/null || yum install -y uuid ||apt-get install -y uuid
    gro=$(uuid |awk -F '-' '{print $1}')
  fi
  for i in $(cat $tmpfile)
  do
    value=${i##*=}
    j=${i%%=*}
    subsys=${j%%.*}
    pro=${j#*.}
    cgget -g $subsys / |grep -q "$subsys.$pro:" || error_message "$subsys.$pro is not found in $subsys" 25
  done
  for i in $(cat $tmpfile)
  do
    value=${i##*=}
    j=${i%%=*}
    subsys=${j%%.*}
    pro=${j#*.}
    #echo subsys=$subsys pro=$pro value=$value
    cgcreate -g $subsys:$gro
    cgset -r $subsys.$pro=$value /$gro
  done
  arg=$(cat $tmpfile | awk -F '.' '{print $1}'|uniq|awk -v gro="$gro"  -F '.' '{print "-g "$1":"gro}')
fi

if [[ $rmpid ]]
then
  for i in `lscgroup |awk -F ':' '{print $1}'|sort |uniq`;do echo "-g $i:/ " ;done >$tmpfile
  arg=$(cat $tmpfile)
fi

if [[ $exec_str ]]
then
  cgexec $arg --sticky $exec_str
  rm $tmpfile
fi

if [[ $attach_pid ]]
then
  pidlist=`ps -eLf |awk -v pid=$attach_pid '{if($2==pid){print $4}}'`
  cgclassify $arg --sticky $attach_pid $pidlist
  rm $tmpfile
fi


if [[ $rm_null ]]
then
  for i in `lscgroup`
  do
    grep -q $i /proc/*/cgroup || cgdelete $i
  done
fi

